"""
Constants for use across all of BBopt.
"""


# Installation constants:
name = "bbopt"
version = "1.4.2"
description = "The easiest hyperparameter optimization you'll ever do."
long_description = """
See BBopt's GitHub_ for more information.

.. _GitHub: https://github.com/evhub/bbopt
"""
github_url = "https://github.com/evhub/bbopt"
author = "Evan Hubinger"
author_email = "evanjhub@gmail.com"
classifiers = (
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
)
requirements = (
    "numpy>=1.15.1",
    "matplotlib>=2.2.5",
)
extra_requirements = {
    ":python_version>='3.7'": (
        "bask>=0.10.6",
    ),
    ":python_version>='3'": (
        "pysot>=0.3.3",
        "portalocker>=2.2.1",
        "hyperopt>=0.2.5",
        "scikit-optimize>=0.8.1",
        "openai>=0.6.4",
        # highest version supported by bask
        "scikit-learn>=0.23.2",
        # fixes an issue with networkx which is used by hyperopt
        "networkx>=2.2",
        # fixes an issue with bson which is used by hyperopt
        "pymongo>=3.9",
        # fixes an issue with hyperopt on Python < 3.6
        "pyspark>=2.4",
    ),
    ":python_version<'3'": (
        "futures>=3.3",
        "scikit-learn>=0.20.4",
        # highest version with Python 2 support
        "scikit-optimize>=0.8.1,<0.9",
        # fixes an issue with portalocker 2 on Python 2
        "portalocker>=1.7.1,<2.0",
        # fixes issues with hyperopt on Python 2
        "hyperopt>=0.1.2,<0.2",
        "networkx>=1.0,<2.0",
    ),
    "examples": (
        "tensorflow>=2.0; python_version>='3'",
    ),
}
extra_requirements["dev"] = (
    extra_requirements["examples"]
    + (
        "coconut-develop",
        "pytest>=3.0",
    )
)


# Optimizer constants:
default_alg = "any_fast"
default_meta_alg = "boltzmann_gumbel_exploration"

default_protocol = 2
lock_timeout = 6
meta_opt_alg_var = "_run_meta_alg"
data_file_ext = ".bbopt"

use_generic_categories_for_categorical_data = False
use_placeholder_when_outside_support = False

default_alg_sentinel = object()


# CLI constants:
default_trials = 100
default_jobs = 4

run_id_env_var = "BBOPT_RUN_ID"


# Backend constants:
default_fallback_backend = "random"
erroring_backend_errs = (ValueError, TypeError)

eps_greedy_explore_prob = 0.2
safe_fallback_alg = "tree_structured_parzen_estimator"


# OpenAI constants:
openai_default_engine = "text-curie-001"

openai_default_temp = 1
openai_max_temp = 2

openai_default_max_retries = 10

openai_max_context_err_prefix = "This model's maximum context length is "
